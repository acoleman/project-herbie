<?php

/**
 * @file
 * Contains theme functions for unl_five_herbie.
 */

/**
 * Implements template_preprocess_page().
 */
function unl_five_herbie_preprocess_page(&$variables) {
  // Hide the hero region page title on Person nodes.
  $current_route = \Drupal::routeMatch();
  $node = $current_route->getParameters()->get('node');
  if ($node) {
    $bundle = $node->bundle();

    switch ($bundle) {
      case ('person'):
        $variables['unl_no_page_title'] = TRUE;
        break;
    }
  }
}

/**
 * Implements template_preprocess_region().
 */
function unl_five_herbie_preprocess_region(&$variables) {
  // Add the Hero field (s_n_hero) to the hero region template, region--hero.html.twig.
  if ($variables['region'] == 'hero') {
    $current_route = \Drupal::routeMatch();
    $node = $current_route->getParameters()->get('node');
    if ($node && $node->hasField('s_n_hero') && !$node->get('s_n_hero')->isEmpty()) {
      $variables['s_n_hero'] = $node->get('s_n_hero')->view(['label' => 'hidden', 'type' => 'entity_reference_entity_view']);
    }
  }
}

/**
 * Implements template_preprocess_block().
 */
function unl_five_herbie_preprocess_block(&$variables) {
  if (isset($variables['content']['#block_content'])) {
    $bundle = $variables['content']['#block_content']->bundle();

    $section_classes = $variables['content']['#block_content']->__get('#section_classes');
    $variables['content']['section_classes'] = $section_classes;
  }
}

/**
 * Implements template_preprocess_field().
 */
function unl_five_herbie_preprocess_field(&$variables) {
  $field_name = $variables['field_name'];

  /**
   * Image field in Hero block type.
   */
  if ($field_name == 'b_hero_image') {
    // Add needed classes to the <img> tag inside a Hero block.
    foreach ($variables['items'] as $key => $item) {
      $variables['items'][$key]['content']['#item_attributes']['class'][] = 'dcf-d-block dcf-h-100% dcf-obj-fit-cover';
    }
  }

  /**
   * Entity reference field that references a Hero block.
   */
  if ($field_name == 's_n_hero') {
    // Provide Breadcrumbs and Page title variables for field--s-n-hero.html.twig.
    $request     = \Drupal::request();
    $route_match = \Drupal::routeMatch();
    $variables['page_title'] = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());

    $breadcrumb_block = \Drupal\block\Entity\Block::load('breadcrumbs');
    $breadcrumb_block_content = \Drupal::entityTypeManager()
      ->getViewBuilder('block')
      ->view($breadcrumb_block);
    $variables['breadcrumbs'] = $breadcrumb_block_content;

    // Set a variable with the b_hero_size CSS class since rendering the field
    // directly into the template will include breaking HTML comments if twig debugging is enabled.
    $variables['hero_size_class'] = $variables['items'][0]['content']['b_hero_size'][0]['#markup'];
   }


  /**
   * Card block type.
   */

  // $section_classes is NULL if nothing is returned.
  $section_classes = $variables['element']['#object']->__get('#section_classes');

  switch ($field_name) {
    case 'b_card_overline':
    case 'b_card_headline':
    case 'b_card_subhead':
    case 'b_card_body':
    case 'b_card_cta':
    case 'b_card_image':
      // Add to all Card fields.
      $variables['items'][0]['content']['section_classes'] = $section_classes;

      $card_presentation = $variables['element']['#object']->get('b_card_card_presentation')->getValue();
      $variables['items'][0]['content']['card_presentation'] = isset($card_presentation[0]['value']) ? $card_presentation[0]['value'] : '';

      // Loop through individual Card fields.
      switch ($field_name) {
        case 'b_card_headline':
          $headline_link = $variables['element']['#object']->get('b_card_headline_link')->first();
          $headline_link = !empty($headline_link) ? $headline_link->getUrl() : '';
          $variables['items'][0]['content']['headline_link'] = $headline_link;

          $overline = $variables['element']['#object']->get('b_card_overline')->getValue();
          $variables['items'][0]['content']['overline'] = isset($overline[0]['value']) ? $overline[0]['value'] : '';

          $subhead = $variables['element']['#object']->get('b_card_subhead')->getValue();
          $variables['items'][0]['content']['subhead'] = isset($subhead[0]['value']) ? $subhead[0]['value'] : '';
          break;

        case 'b_card_cta':
          $cta_style = $variables['element']['#object']->get('b_card_cta_style')->getValue();
          $variables['items'][0]['content']['cta_style'] = isset($cta_style[0]['value']) ? $cta_style[0]['value'] : '';
          break;
      }

      break;
  }
}

/**
 * Implements template_preprocess_layout().
 */
function unl_five_herbie_preprocess_layout(&$variables) {
  // Make section classes array available to each block in the layout.
  if (isset($variables['settings']['section_classes']) && !empty($variables['settings']['section_classes'])) {
    $section_classes = $variables['settings']['section_classes'];

    // Loop through each region.
    foreach ($variables['content'] as $region_id => $region) {
      if (substr($region_id, 0, 1) !== '#') {
        // Loop through each block.
        foreach ($region as $block_id => $block) {
          if (substr($block_id, 0, 1) !== '#') {
            if (isset($variables['content'][$region_id][$block_id]['content']['#block_content'])) {
              $variables['content'][$region_id][$block_id]['content']['#block_content']->__set('#section_classes', $section_classes);
            }
          }
        }
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for media templates.
 */
function unl_five_herbie_theme_suggestions_media_alter(array &$suggestions, array $variables) {
  // Add a template suggestion so that media in a specific block can be targeted.
  // This allows a template such as media__hero.html.twig for removing all wrappers,
  // including the contextual link wrapper, that interfere with 5.0 CSS.
  // https://drupal.stackexchange.com/a/245683
  $media = $variables['elements']['#media'];
  $parent = $media->_referringItem->getEntity();
  $suggestions[] = 'media__' . $parent->bundle();
}

/**
 * Implements template_preprocess_responsive_image_formatter().
 */
function unl_five_herbie_preprocess_responsive_image_formatter(array &$variables) {
  // Pass field name to Twig as data- attribute.
  $variables['responsive_image']['#attributes']['data-field-name'] = $variables['item']->getFieldDefinition()->get('field_name');
}
