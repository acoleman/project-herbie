<?php

/**
 * Implements template_preprocess_page().
 */
function unl_five_herbie_preprocess_page(&$variables) {
  // Hide the hero region page title on Person nodes.
  $current_route = \Drupal::routeMatch();
  $node = $current_route->getParameters()->get('node');
  if ($node) {
    $bundle = $node->bundle();

    switch ($bundle) {
      case ('person'):
        $variables['unl_no_page_title'] = TRUE;
        break;
    }
  }
}

/**
 * Implements template_preprocess_region().
 */
function unl_five_herbie_preprocess_region(&$variables) {
  // Add the Hero field (s_n_hero) to the hero region template, region--hero.html.twig.
  if ($variables['region'] == 'hero') {
    $current_route = \Drupal::routeMatch();
    $node = $current_route->getParameters()->get('node');
    if ($node && $node->hasField('s_n_hero') && !$node->get('s_n_hero')->isEmpty()) {
      $variables['s_n_hero'] = $node->get('s_n_hero')->view(['label' => 'hidden', 'type' => 'entity_reference_entity_view']);
    }
  }
}

/**
 * Implements template_preprocess_field().
 */
function unl_five_herbie_preprocess_field(&$variables) {
  if ($variables['field_name'] == 'field_media_image') {
    // Add needed classes to a media image's <img> tag inside a Hero block.
    if ($variables['element']['#object']->_referringItem->getEntity()->bundle() == 'hero') {
      foreach ($variables['items'] as $key => $item) {
        $variables['items'][$key]['content']['#item_attributes']['class'][] = 'dcf-d-block dcf-h-100% dcf-obj-fit-cover';
      }
    }
  }

  if ($variables['field_name'] == 's_n_hero') {
    // Provide Breadcrumbs and Page title variables for field--s-n-hero.html.twig.
    $request     = \Drupal::request();
    $route_match = \Drupal::routeMatch();
    $variables['page_title'] = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());

    $breadcrumb_block = \Drupal\block\Entity\Block::load('breadcrumbs');
    $breadcrumb_block_content = \Drupal::entityTypeManager()
      ->getViewBuilder('block')
      ->view($breadcrumb_block);
    $variables['breadcrumbs'] = $breadcrumb_block_content;

    // Set a variable with the b_hero_size CSS class since rendering the field
    // directly into the template will include breaking HTML comments if twig debugging is enabled.
    $variables['hero_size_class'] = $variables['items'][0]['content']['b_hero_size'][0]['#markup'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for media templates.
 */
function unl_five_herbie_theme_suggestions_media_alter(array &$suggestions, array $variables) {
  // Add a template suggestion so that media in a specific block can be targeted.
  // This allows a template such as media__hero.html.twig for removing all wrappers,
  // including the contextual link wrapper, that interfere with 5.0 CSS.
  // https://drupal.stackexchange.com/a/245683
  $media = $variables['elements']['#media'];
  $parent = $media->_referringItem->getEntity();
  $suggestions[] = 'media__' . $parent->bundle();
}
