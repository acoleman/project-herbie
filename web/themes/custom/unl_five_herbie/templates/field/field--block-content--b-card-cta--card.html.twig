{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 */
#}
{% set element_attributes = create_attribute() %}
{% set element_attributes = element_attributes.addClass(['dcf-btn', 'dcf-mt-6']) %}

{# Create mapping of background colors to foreground colors #}
{%
  set bg_color_mapping = {
    'unl-bg-scarlet': 'unl-scarlet',
    'unl-bg-darkest-gray': 'unl-darkest-gray',
    'unl-bg-darker-gray': 'unl-darker-gray',
    'unl-bg-dark-gray': 'unl-dark-gray'
  }
%}

{% for item in items %}
  {# For transparent cards with dark section backgrounds #}
  {% if item.data.card_presentation == 'transparent' and 'dcf-inverse' in item.data.section_classes %}
    {% if item.data.cta_style == 'primary' %}
      {% set section_classes = array_flip(item.data.section_classes) %}
      {% set bg_color = intersect_key(bg_color_mapping, section_classes)|first %}
      {% set element_attributes = element_attributes.addClass(bg_color) %}
      {% set element_attributes = element_attributes.addClass('dcf-btn-inverse-primary') %}
    {% elseif item.content['cta_style'] == 'secondary' %}
      {% set element_attributes = element_attributes.addClass('dcf-btn-inverse-secondary') %}
    {% endif %}
  {# For every other scenario #}
  {% else %}
    {% if item.data.cta_style == 'primary' %}
      {% set element_attributes = element_attributes.addClass('dcf-btn-primary') %}
    {% elseif item.content['cta_style'] == 'secondary' %}
      {% set element_attributes = element_attributes.addClass('dcf-btn-secondary') %}
    {% endif %}    
  {% endif %}
  <a href="{{ item.content['#url'] }}" {{ element_attributes }}>{{ item.content['#title'] }}</a>
{% endfor %}
