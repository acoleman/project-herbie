diff --git a/src/Plugin/Linkit/Matcher/EntityMatcher.php b/src/Plugin/Linkit/Matcher/EntityMatcher.php
index 9d56a47..33296be 100644
--- a/src/Plugin/Linkit/Matcher/EntityMatcher.php
+++ b/src/Plugin/Linkit/Matcher/EntityMatcher.php
@@ -491,7 +491,18 @@ class EntityMatcher extends ConfigurableMatcherBase {
    *   The path for this entity.
    */
   protected function buildPath(EntityInterface $entity) {
-    return $entity->toUrl('canonical', ['path_processing' => FALSE])->toString();
+    $path = $entity->toUrl('canonical', ['path_processing' => FALSE])->toString();
+    // For media entities, check if standalone URLs are allowed. If not, then
+    // strip '/edit' from the end of the canonical URL returned
+    // by $entity->toUrl().
+    if ($entity->getEntityTypeId() == 'media') {
+      $standalone_url = \Drupal::config('media.settings')->get('standalone_url');
+      if ($standalone_url) {
+        // Strip "/edit".
+        $path = substr($path, 0, -5);
+      }
+    }
+    return $path;
   }
 
   /**
diff --git a/tests/src/Kernel/Matchers/MediaMatcherTest.php b/tests/src/Kernel/Matchers/MediaMatcherTest.php
index ba9d648..b2b65f7 100644
--- a/tests/src/Kernel/Matchers/MediaMatcherTest.php
+++ b/tests/src/Kernel/Matchers/MediaMatcherTest.php
@@ -86,6 +86,22 @@ class MediaMatcherTest extends LinkitKernelTestBase {
     $plugin = $this->manager->createInstance('entity:media', []);
     $suggestions = $plugin->execute('image-test');
     $this->assertEquals(3, count($suggestions->getSuggestions()), 'Correct number of suggestions.');
+
+    // Verify suggestion paths.
+    foreach ($suggestions->getSuggestions() as $key => $suggestion) {
+      $this->assertEquals('/media/' . ($key + 1) . '/edit', $suggestion->getPath());
+    }
+
+    // Enable stand-alone URLs for media entities.
+    $config = \Drupal::service('config.factory')->getEditable('media.settings');
+    $config->set('standalone_url', TRUE)->save();
+
+    $suggestions = $plugin->execute('image-test');
+
+    // Re-verify suggestion paths.
+    foreach ($suggestions->getSuggestions() as $key => $suggestion) {
+      $this->assertEquals('/media/' . ($key + 1), $suggestion->getPath());
+    }
   }
 
 }
