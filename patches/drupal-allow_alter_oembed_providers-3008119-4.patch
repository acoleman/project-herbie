diff --git a/core/modules/media/media.api.php b/core/modules/media/media.api.php
index 93244f58a8..658539783f 100644
--- a/core/modules/media/media.api.php
+++ b/core/modules/media/media.api.php
@@ -37,6 +37,32 @@ function hook_oembed_resource_url_alter(array &$parsed_url, \Drupal\media\OEmbed
   }
 }
 
+/**
+ * Alters the list of providers after it is fetched.
+ *
+ * @param array $providers
+ *   An array of provider defintions, as fetched from the oEmbed providers URL.
+ *
+ * @see \Drupal\media\OEmbed\ProviderRepository::getAll()
+ */
+function hook_oembed_providers_alter(array &$providers) {
+  // Add a custom provider.
+  $providers[] = [
+    'provider_name' => 'Custom Provider',
+    'provider_url' => 'http://custom-provider.example.com',
+    'endpoints' => [
+      [
+        'schemes' => [
+          'http://custom-provider.example.com/id/*',
+          'https://custom-provider.example.com/id/*',
+        ],
+        'url' => 'https://custom-provider.example.com/api/v2/oembed/',
+        'discovery' => 'true',
+      ],
+    ],
+  ];
+}
+
 /**
  * @} End of "addtogroup hooks".
  */
diff --git a/core/modules/media/media.services.yml b/core/modules/media/media.services.yml
index 1b49c6ed4b..3a1618155a 100644
--- a/core/modules/media/media.services.yml
+++ b/core/modules/media/media.services.yml
@@ -12,7 +12,7 @@ services:
     arguments: ['@media.oembed.provider_repository', '@media.oembed.resource_fetcher', '@http_client', '@module_handler', '@cache.default']
   media.oembed.provider_repository:
     class: Drupal\media\OEmbed\ProviderRepository
-    arguments: ['@http_client', '@config.factory', '@datetime.time', '@cache.default']
+    arguments: ['@http_client', '@config.factory', '@module_handler', '@datetime.time', '@cache.default']
   media.oembed.resource_fetcher:
     class: Drupal\media\OEmbed\ResourceFetcher
     arguments: ['@http_client', '@media.oembed.provider_repository', '@cache.default']
diff --git a/core/modules/media/src/OEmbed/ProviderRepository.php b/core/modules/media/src/OEmbed/ProviderRepository.php
index dada7fb255..6224cc649c 100644
--- a/core/modules/media/src/OEmbed/ProviderRepository.php
+++ b/core/modules/media/src/OEmbed/ProviderRepository.php
@@ -7,6 +7,7 @@
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Cache\UseCacheBackendTrait;
 use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\Core\Extension\ModuleHandlerInterface;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\RequestException;
 
@@ -31,6 +32,13 @@ class ProviderRepository implements ProviderRepositoryInterface {
    */
   protected $httpClient;
 
+  /**
+   * The module handler service.
+   *
+   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   */
+  protected $moduleHandler;
+
   /**
    * URL of a JSON document which contains a database of oEmbed providers.
    *
@@ -52,6 +60,8 @@ class ProviderRepository implements ProviderRepositoryInterface {
    *   The HTTP client.
    * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
    *   The config factory service.
+   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   *   The module handler service.
    * @param \Drupal\Component\Datetime\TimeInterface $time
    *   The time service.
    * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
@@ -59,9 +69,10 @@ class ProviderRepository implements ProviderRepositoryInterface {
    * @param int $max_age
    *   (optional) How long the cache data should be kept. Defaults to a week.
    */
-  public function __construct(ClientInterface $http_client, ConfigFactoryInterface $config_factory, TimeInterface $time, CacheBackendInterface $cache_backend = NULL, $max_age = 604800) {
+  public function __construct(ClientInterface $http_client, ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler, TimeInterface $time, CacheBackendInterface $cache_backend = NULL, $max_age = 604800) {
     $this->httpClient = $http_client;
     $this->providersUrl = $config_factory->get('media.settings')->get('oembed_providers_url');
+    $this->moduleHandler = $module_handler;
     $this->time = $time;
     $this->cacheBackend = $cache_backend;
     $this->maxAge = (int) $max_age;
@@ -87,6 +98,8 @@ public function getAll() {
 
     $providers = Json::decode((string) $response->getBody());
 
+    $this->moduleHandler->alter('oembed_providers', $providers);
+
     if (!is_array($providers) || empty($providers)) {
       throw new ProviderException('Remote oEmbed providers database returned invalid or empty list.');
     }
diff --git a/core/modules/media/tests/modules/media_test_oembed/media_test_oembed.module b/core/modules/media/tests/modules/media_test_oembed/media_test_oembed.module
index f3b283ca63..13cdc54b1e 100644
--- a/core/modules/media/tests/modules/media_test_oembed/media_test_oembed.module
+++ b/core/modules/media/tests/modules/media_test_oembed/media_test_oembed.module
@@ -15,3 +15,24 @@ function media_test_oembed_oembed_resource_url_alter(array &$parsed_url, Provide
     $parsed_url['query']['altered'] = 1;
   }
 }
+
+/**
+ * Implements hook_oembed_providers_alter().
+ */
+function media_test_oembed_oembed_providers_alter(array &$providers) {
+  // Add a custom provider.
+  $providers[] = [
+    'provider_name' => 'Custom Provider',
+    'provider_url' => 'http://custom-provider.example.com',
+    'endpoints' => [
+      [
+        'schemes' => [
+          'http://custom-provider.example.com/id/*',
+          'https://custom-provider.example.com/id/*',
+        ],
+        'url' => 'https://custom-provider.example.com/api/v2/oembed/',
+        'discovery' => 'true',
+      ],
+    ],
+  ];
+}
diff --git a/core/modules/media/tests/src/Functional/ProviderRepositoryTest.php b/core/modules/media/tests/src/Functional/ProviderRepositoryTest.php
index 43a71053ab..22aca1b199 100644
--- a/core/modules/media/tests/src/Functional/ProviderRepositoryTest.php
+++ b/core/modules/media/tests/src/Functional/ProviderRepositoryTest.php
@@ -86,4 +86,13 @@ public function providerNonExistingProviderDatabase() {
     ];
   }
 
+  /**
+   * Tests that hook_oembed_providers_alter() is invoked.
+   */
+  public function testProvidersAlterHook() {
+    $this->container->get('module_installer')->install(['media_test_oembed']);
+    $providers = $this->container->get('media.oembed.provider_repository')->getAll();
+    $this->assertArrayHasKey('Custom Provider', $providers);
+  }
+
 }
